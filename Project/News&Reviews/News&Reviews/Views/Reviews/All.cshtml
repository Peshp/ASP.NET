@using News_Reviews.Models.Models;
@using News_Reviews.Models.Models.Reviews;
@model IEnumerable<ReviewsViewModel>

@using X.PagedList.Mvc.Core;
@using X.PagedList;

<style>
        body {
            background-color: black;            
        }

        .card {
            background-color: transparent;
            border: none;
            margin-bottom: 30px;
            border-bottom: 2px solid blue; 
        }

        h1 {
            color: cyan;
            padding: 25px;
            padding-bottom: 25px;
            font-family: Calibri, sans-serif;
            font-weight: bold;
        }

        .card .card-body .card-title a {
            color: inherit;
            text-decoration: none;
        }

        .card .card-body .card-title {
            color: cyan;
            padding: 10px;
            position: relative;
            bottom: 36px;
        }

        .card .card-body .card-text {
            color: white;
            white-space: normal;
            margin-left: 10px;
            position: relative;
            bottom: 34px;
        }

        .card .card-body img {
            width: 100%;
            height: 200px;
            object-fit: cover;
        }

        .card-buttons {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            margin-top: 10px;
        }

        .card-buttons button {
            margin-left: 10px;
        }

        .big-card {
            background-color: transparent;
            border: none;
            margin-bottom: 30px;
        }

        .big-card .card-body {
            padding: 20px;
        }

        .big-card img {
            width: 100%;
            height: 200px; 
            object-fit: cover;
        }

        .big-card .card-title a {
            color: inherit;
            text-decoration: none;
            font-size: 24px;
            font-weight: bold;
        }

        .big-card {
            display: inline-block; 
            margin-right: 20px; 
        }
</style>

<div>
    <h1>Editor's Choice</h1>
    <div class="row">
        @foreach (var review in Model.Take(3))
        {
            string[] sentences = review.Content.Split('.'); // Split the content into sentences
            string firstTwoSentences = string.Join(".", sentences.Take(1)); // Take the first sentence

            <div class="col-md-4">
                <div class="big-card">
                    <div class="card w-100">
                        <img src="@review.ImageURL" class="img-fluid" alt="@review.ImageURL">
                        <div class="card-body">
                            <h1 class="card-title" style="color: cyan;"><a asp-controller="Reviews" asp-action="Read" asp-route-id="@review.Id">@review.Title</a></h1>
                            <p class="card-text" style="color: white;">@firstTwoSentences</p>
                        </div>
                        <div class="d-flex justify-content-end">
                            <form class="input-group-sm" asp-controller="Reviews" asp-action="Remove" asp-route-id="@review.Id">
                                <input type="submit" value="Remove" class="fs-6 btn btn-danger" />
                            </form>
                            <a asp-controller="Reviews" asp-action="Edit" asp-route-id="@review.Id" class="btn btn-primary ml-2">Edit</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <h1>Reviews</h1>

    <div class="row">
        @foreach (var review in Model.Skip(3))
        {
            string[] sentences = review.Content.Split('.'); // Split the content into sentences
            string firstTwoSentences = string.Join(".", sentences.Take(1)); // Take the first sentence

            <div class="card w-75">
                <div class="row g-0">
                    <div class="col-md-4">
                        <img src="@review.ImageURL" class="img-fluid" alt="Card image" style="height: 200px; width: 100%;">
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h2 class="card-title"><a asp-controller="Reviews" asp-action="Read" asp-route-id="@review.Id">@review.Title</a></h2>
                            <h5 class="card-text" style="width: 350px; text-align: justify;">@firstTwoSentences</h5>
                            <div class="d-flex justify-content-end">
                                <form class="input-group-sm" asp-controller="Reviews" asp-action="Remove" asp-route-id="@review.Id">
                                    <input type="submit" value="Remove" class="fs-6 btn btn-danger" />
                                </form>
                                <a asp-controller="Reviews" asp-action="Edit" asp-route-id="@review.Id" class="btn btn-primary ml-2">Edit</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- paging control for navigation -->
@Html.PagedListPager((IPagedList)Model, page => Url.Action("All", new { page = page }),
    new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
    {
        DisplayItemSliceAndTotal = true,
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
    })

@section Scripts{
    <script>
        // Workaround to fix style of text for showing items .. through ..
        // Problem related to Bootstrap 4 according to issue in link below
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });

        $(document).ready(function () {
            // Get all the pagination links
            var paginationLinks = document.querySelectorAll('.pagination .page-link');

            // Change the colors
            paginationLinks.forEach(function (link) {
                link.style.color = '#fff';
                link.style.backgroundColor = '#353746';
                link.style.borderColor = 'cyan';
            });
        });

        // Change the style of the item slice text
        var itemSliceText = document.querySelector('.item-slice-text');
        itemSliceText.style.color = 'cyan';
        itemSliceText.style.fontSize = '20px';
        itemSliceText.style.border = '2px solid cyan';

        // Change the style of the write post title
        var writePostTitle = document.querySelector('.write-post-title');
        writePostTitle.style.fontSize = '25px';
        writePostTitle.style.color = 'lightblue';

        $(document).ready(function () {
            // Change the style of the item slice text
            $('.item-slice-text').css({
                'color': 'cyan',
                'font-size': '20px',
                'border': '2px solid cyan'
            });
        });
    </script>
}
